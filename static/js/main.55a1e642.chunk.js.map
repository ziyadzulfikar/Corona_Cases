{"version":3,"sources":["reportWebVitals.js","Corona/Components/Total.js","Corona/Components/StateCases.js","Corona/Components/World.js","Corona/Components/Header.js","Corona/Corona.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Total","props","state","data","deaths","recovered","axios","get","response","setState","cases","death","console","log","Object","keys","this","className","Card","Body","Title","Text","React","Component","StateCases","statecase","confirmed","active","deceased","Accordion","defaultActiveKey","map","itm","k","districts","districtData","districtKeys","activeCases","confirmedCases","deceasedCases","recoveredCases","district_list","x","ob","push","Header","Toggle","as","Button","variant","eventKey","Badge","Collapse","Table","striped","bordered","hover","dist","dk","districtCases","World","country","countrylist","image","countryInfo","flag","style","width","src","Navbar","bg","Brand","href","Nav","to","exact","path","Corona","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55a1e642.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nclass Total extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data: [],\r\n            deaths: [],\r\n            recovered: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"https://corona.lmao.ninja/v2/countries/india\").then(response=>{\r\n            this.setState({\r\n                data: response.data.cases,\r\n                death: response.data.deaths,\r\n                recovered: response.data.recovered\r\n            });\r\n            console.log(response.data.cases);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let dataKeys = Object.keys(this.state.data)\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-4\">\r\n                            <Card className=\"bg-warning text-white text-center\">\r\n                                <Card.Body>\r\n                                    <Card.Title className=\"text-white\">Total Cases</Card.Title>\r\n                                    <Card.Text>\r\n                                    {this.state.data}\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <Card className=\"bg-danger text-white text-center\">\r\n                                <Card.Body>\r\n                                    <Card.Title className=\"text-white\">Total Deaths</Card.Title>\r\n                                    <Card.Text>\r\n                                    {this.state.death}\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <Card className=\"bg-success text-white text-center\">\r\n                                <Card.Body>\r\n                                    <Card.Title className=\"text-white\">Total Recovered</Card.Title>\r\n                                    <Card.Text>\r\n                                    {this.state.recovered}\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Total;","import axios from 'axios';\r\nimport React from 'react';\r\nimport { Badge, Table, Card, Accordion, Button } from 'react-bootstrap';\r\nimport Total from './Total';\r\n\r\nclass StateCases extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            statecase: {},\r\n            confirmed: {},\r\n            active: {},\r\n            deceased: {},\r\n            recovered: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"https://api.covid19india.org/state_district_wise.json\").then(response=>{\r\n            this.setState({statecase: response.data})\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let keys = Object.keys(this.state.statecase);\r\n        return (\r\n            <div className=\"container\">\r\n               \r\n                <Total />\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-md-12\">\r\n                    <Accordion defaultActiveKey=\"0\">\r\n                        {keys.map((itm,k)=>{\r\n                            let districts = this.state.statecase[itm].districtData;\r\n                            let districtKeys = Object.keys(districts);\r\n                            let activeCases = 0;\r\n                            let confirmedCases = 0;\r\n                            let deceasedCases = 0;\r\n                            let recoveredCases = 0;\r\n                            let district_list = [];\r\n                            for(let x in districts){\r\n                                activeCases += districts[x].active;\r\n                                confirmedCases += districts[x].confirmed;\r\n                                deceasedCases += districts[x].deceased;\r\n                                recoveredCases += districts[x].recovered;\r\n                                let ob = districts[x];\r\n                                ob[\"district_name\"] = x;\r\n                                district_list.push(ob);\r\n                            }\r\n                            return(\r\n                                <Card>\r\n                                    <Card.Header>\r\n                                    <Accordion.Toggle as={Button} variant=\"btn btn-light\" eventKey={k}>\r\n                                        {itm} - <Badge variant=\"warning\">{confirmedCases}</Badge><Badge className=\"ml-1\" variant=\"primary\">{activeCases}</Badge><Badge className=\"ml-1\" variant=\"success\">{recoveredCases}</Badge><Badge className=\"ml-1\" variant=\"danger\">{deceasedCases}</Badge> \r\n                                    </Accordion.Toggle>\r\n                                    </Card.Header>\r\n                                    <Accordion.Collapse eventKey={k}>\r\n                                        <Table striped bordered hover>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                <th>#</th>\r\n                                                <th>Districts</th>\r\n                                                <th>Confirmed</th>\r\n                                                <th>Active</th>\r\n                                                <th>Recovered</th>\r\n                                                <th>Deceased</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {districtKeys.map((dist, dk)=>{\r\n                                                    let districtCases = this.state.statecase[itm].districtData[dist];\r\n                                                    return(\r\n                                                        <tr>\r\n                                                            <td>{dk}</td>\r\n                                                            <td>{districtKeys[dk]}</td>\r\n                                                            <td>{districtCases.confirmed}</td>\r\n                                                            <td>{districtCases.active}</td>\r\n                                                            <td>{districtCases.recovered}</td>\r\n                                                            <td>{districtCases.deceased}</td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            )\r\n                        })}\r\n                    </Accordion>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default StateCases;","import React from 'react';\r\nimport {Badge, Card, Accordion, Button} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nclass World extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"https://corona.lmao.ninja/v2/countries?sort=country\").then(response=>{\r\n            this.setState({data: response.data})\r\n            console.log(response.data.country);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let ob = Object.keys(this.state.data)\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-12\">\r\n                            <Accordion defaultActiveKey={ob}>\r\n                                {ob.map((itm, k)=>{\r\n                                    let countrylist = this.state.data[k].country;\r\n                                    let deaths = this.state.data[k].deaths;\r\n                                    let cases = this.state.data[k].cases;\r\n                                    let recovered = this.state.data[k].recovered;\r\n                                    let image = this.state.data[k].countryInfo.flag;\r\n                                    return(\r\n                                        <Card>\r\n                                            <Card.Header>\r\n                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey={ob[k]}>\r\n                                                {countrylist}\r\n                                                <img style={{width: '50px'}} src={image} className=\"rounded ml-3\" />\r\n                                            </Accordion.Toggle>\r\n                                            </Card.Header>\r\n                                            <Accordion.Collapse eventKey={ob[k]}>\r\n                                            <Card.Body>\r\n                                                <Badge variant=\"danger\">Deaths - {deaths}</Badge><br />\r\n                                                <Badge variant=\"warning\">Cases - {cases}</Badge><br />\r\n                                                <Badge variant=\"success\">Recovered - {recovered}</Badge>\r\n                                                \r\n                                            </Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n                                        \r\n                                    )\r\n                                })}\r\n                                \r\n                            </Accordion>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default World;","import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport StateCases from './StateCases';\r\nimport World from './World';\r\n \r\nclass Header extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Navbar bg=\"dark\" variant=\"dark\">\r\n                        <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n                        <Nav className=\"mr-auto\">\r\n                        <Link className=\"nav-link\" variant=\"text\" to='/'>India</Link>\r\n                        <Link className=\"nav-link\" to='/world'>World</Link>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </div>\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <StateCases />\r\n                    </Route>\r\n                    <Route path='/world'>\r\n                        <World />\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n            \r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n// import { Button } from 'react-bootstrap';\r\n// import axios from 'axios';\r\n// import StateCases from './Components/StateCases';\r\n// import Total from './Components/Total';\r\n// import World from './Components/World';\r\nimport Header from './Components/Header';\r\n\r\nclass Corona extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Header />\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Corona;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import Counter from './Counter';\n// import EventHandle from './EventHandle';\n// import EventHandleClass from './EventHandleClass';\n// import List from './List';\n// import Todo from './Todo';\n// import Hooks from './Hooks';\n// import Ajax from './Ajax';\n// import Form from './Form';\nimport Corona from './Corona/Corona';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Corona />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}